name: Build and Deploy

on:
  workflow_dispatch:
    inputs:
      release_notes:
        description: 'Release notes for this deployment'
        required: false
        type: string

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    
    - name: Extract version from pom.xml
      id: get_version
      run: |
        VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "Version extracted from pom.xml: $VERSION"
    
    - name: Build with Maven
      run: mvn -B clean package -DskipTests
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: |
          yangding14/ilmiah-alert:${{ env.VERSION }}
          yangding14/ilmiah-alert:latest
        cache-from: type=registry,ref=yangding14/ilmiah-alert:buildcache
        cache-to: type=registry,ref=yangding14/ilmiah-alert:buildcache,mode=max
    
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

    - name: Deploy to Render
      run: |
        curl --request POST \
             --url https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys \
             --header 'accept: application/json' \
             --header 'authorization: Bearer ${{ secrets.RENDER_API_KEY }}' \
             --header 'content-type: application/json' \
             --data '{
               "clearCache": "do_not_clear",
               "imageUrl": "docker.io/yangding14/ilmiah-alert:${{ env.VERSION }}"
             }'
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ env.VERSION }}
        name: Release v${{ env.VERSION }}
        body: ${{ github.event.inputs.release_notes }}
        draft: false
        prerelease: false
        generate_release_notes: ${{ github.event.inputs.release_notes == '' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
